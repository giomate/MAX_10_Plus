|Tone_Generator
ADC_CLK_10 => ~NO_FANOUT~
MAX10_CLK1_50 => MAX10_CLK1_50.IN1
MAX10_CLK2_50 => ~NO_FANOUT~
MAX10_CLK3_50 => ~NO_FANOUT~
FPGA_RESET_n => ~NO_FANOUT~
KEY[0] => ~NO_FANOUT~
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
KEY[4] => ~NO_FANOUT~
SW[0] => SW[0].IN1
SW[1] => SW[1].IN1
SW[2] => SW[2].IN1
SW[3] => SW[3].IN1
SW[4] => SW[4].IN1
SW[5] => LEDR[5].DATAIN
SW[6] => LEDR[6].DATAIN
SW[7] => LEDR[7].DATAIN
SW[8] => LEDR[8].DATAIN
SW[9] => LEDR[9].DATAIN
LEDR[0] << SW[0].DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] << SW[1].DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] << SW[2].DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] << SW[3].DB_MAX_OUTPUT_PORT_TYPE
LEDR[4] << SW[4].DB_MAX_OUTPUT_PORT_TYPE
LEDR[5] << SW[5].DB_MAX_OUTPUT_PORT_TYPE
LEDR[6] << SW[6].DB_MAX_OUTPUT_PORT_TYPE
LEDR[7] << SW[7].DB_MAX_OUTPUT_PORT_TYPE
LEDR[8] << SW[8].DB_MAX_OUTPUT_PORT_TYPE
LEDR[9] << SW[9].DB_MAX_OUTPUT_PORT_TYPE
HEX0[0] << <GND>
HEX0[1] << <GND>
HEX0[2] << <GND>
HEX0[3] << <GND>
HEX0[4] << <GND>
HEX0[5] << <GND>
HEX0[6] << <GND>
HEX1[0] << <GND>
HEX1[1] << <GND>
HEX1[2] << <GND>
HEX1[3] << <GND>
HEX1[4] << <GND>
HEX1[5] << <GND>
HEX1[6] << <GND>
DAC_DATA <> DAC16:dac.DIN
DAC_SCLK << DAC16:dac.SCLK
DAC_SYNC_n << DAC16:dac.SYNC
FLASH_DATA[0] <> <UNC>
FLASH_DATA[1] <> <UNC>
FLASH_DATA[2] <> <UNC>
FLASH_DATA[3] <> <UNC>
FLASH_DCLK << <GND>
FLASH_NCSO << <GND>
FLASH_RESET_n << <GND>
PM_I2C_SCL << <GND>
PM_I2C_SDA <> <UNC>
PS2_CLK <> <UNC>
PS2_CLK2 <> <UNC>
PS2_DAT <> <UNC>
PS2_DAT2 <> <UNC>
UART_RESET_n << <GND>
UART_RX => ~NO_FANOUT~
UART_TX << <GND>
GPIO[0] <> <UNC>
GPIO[1] <> <UNC>
GPIO[2] <> <UNC>
GPIO[3] <> <UNC>
GPIO[4] <> <UNC>
GPIO[5] <> <UNC>
GPIO[6] <> <UNC>
GPIO[7] <> <UNC>


|Tone_Generator|pll100:pll100MHz
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk
locked <= altpll:altpll_component.locked


|Tone_Generator|pll100:pll100MHz|altpll:altpll_component
inclk[0] => pll100_altpll:auto_generated.inclk[0]
inclk[1] => pll100_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= pll100_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|Tone_Generator|pll100:pll100MHz|altpll:altpll_component|pll100_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= pll1.LOCKED


|Tone_Generator|DAC16:dac
RESET_N => RESET_N.IN1
CLK_100 => WAVE[0].CLK
CLK_100 => WAVE[1].CLK
CLK_100 => WAVE[2].CLK
CLK_100 => WAVE[3].CLK
CLK_100 => WAVE[4].CLK
CLK_100 => H_L.CLK
CLK_100 => WAVE_SW[0].CLK
CLK_100 => WAVE_SW[1].CLK
CLK_100 => WAVE_SW[2].CLK
CLK_100 => WAVE_SW[3].CLK
CLK_100 => WAVE_SW[4].CLK
CLK_100 => RDATA[0].CLK
CLK_100 => RDATA[1].CLK
CLK_100 => RDATA[2].CLK
CLK_100 => RDATA[3].CLK
CLK_100 => RDATA[4].CLK
CLK_100 => RDATA[5].CLK
CLK_100 => RDATA[6].CLK
CLK_100 => RDATA[7].CLK
CLK_100 => RDATA[8].CLK
CLK_100 => RDATA[9].CLK
CLK_100 => RDATA[10].CLK
CLK_100 => RDATA[11].CLK
CLK_100 => RDATA[12].CLK
CLK_100 => RDATA[13].CLK
CLK_100 => RDATA[14].CLK
CLK_100 => RDATA[15].CLK
CLK_100 => RDATA[16].CLK
CLK_100 => RDATA[17].CLK
CLK_100 => RDATA[18].CLK
CLK_100 => RDATA[19].CLK
CLK_100 => RDATA[20].CLK
CLK_100 => RDATA[21].CLK
CLK_100 => RDATA[22].CLK
CLK_100 => RDATA[23].CLK
CLK_100 => TR_CK~reg0.CLK
CLK_100 => CNT[0].CLK
CLK_100 => CNT[1].CLK
CLK_100 => CNT[2].CLK
CLK_100 => CNT[3].CLK
CLK_100 => CNT[4].CLK
CLK_100 => CNT[5].CLK
CLK_100 => CNT[6].CLK
CLK_100 => CNT[7].CLK
CLK_100 => DIN~reg0.CLK
CLK_100 => SCLK~reg0.CLK
CLK_100 => SYNC~reg0.CLK
CLK_100 => ST~1.DATAIN
DATA16[0] <= raw_sine_wave:sine_wave.wave_out
DATA16[1] <= raw_sine_wave:sine_wave.wave_out
DATA16[2] <= raw_sine_wave:sine_wave.wave_out
DATA16[3] <= raw_sine_wave:sine_wave.wave_out
DATA16[4] <= raw_sine_wave:sine_wave.wave_out
DATA16[5] <= raw_sine_wave:sine_wave.wave_out
DATA16[6] <= raw_sine_wave:sine_wave.wave_out
DATA16[7] <= raw_sine_wave:sine_wave.wave_out
DATA16[8] <= raw_sine_wave:sine_wave.wave_out
DATA16[9] <= raw_sine_wave:sine_wave.wave_out
DATA16[10] <= raw_sine_wave:sine_wave.wave_out
DATA16[11] <= raw_sine_wave:sine_wave.wave_out
DATA16[12] <= raw_sine_wave:sine_wave.wave_out
DATA16[13] <= raw_sine_wave:sine_wave.wave_out
DATA16[14] <= raw_sine_wave:sine_wave.wave_out
DATA16[15] <= raw_sine_wave:sine_wave.wave_out
SYNC <= SYNC~reg0.DB_MAX_OUTPUT_PORT_TYPE
SCLK <= SCLK~reg0.DB_MAX_OUTPUT_PORT_TYPE
DIN <= DIN~reg0.DB_MAX_OUTPUT_PORT_TYPE
SW[0] => WAVE_SW[0].DATAIN
SW[1] => WAVE_SW[1].DATAIN
SW[2] => WAVE_SW[2].DATAIN
SW[3] => WAVE_SW[3].DATAIN
SW[4] => WAVE_SW[4].DATAIN
TR_CK <= TR_CK~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Tone_Generator|DAC16:dac|raw_sine_wave:sine_wave
clk => clk.IN1
reset => reset.IN1
clk_enable => clk_enable.IN1
Enable => Enable.IN1
ce_out <= clk_enable.DB_MAX_OUTPUT_PORT_TYPE
wave_out[0] <= enable_sine_wave:u_enable_sine_wave.wave_out
wave_out[1] <= enable_sine_wave:u_enable_sine_wave.wave_out
wave_out[2] <= enable_sine_wave:u_enable_sine_wave.wave_out
wave_out[3] <= enable_sine_wave:u_enable_sine_wave.wave_out
wave_out[4] <= enable_sine_wave:u_enable_sine_wave.wave_out
wave_out[5] <= enable_sine_wave:u_enable_sine_wave.wave_out
wave_out[6] <= enable_sine_wave:u_enable_sine_wave.wave_out
wave_out[7] <= enable_sine_wave:u_enable_sine_wave.wave_out
wave_out[8] <= enable_sine_wave:u_enable_sine_wave.wave_out
wave_out[9] <= enable_sine_wave:u_enable_sine_wave.wave_out
wave_out[10] <= enable_sine_wave:u_enable_sine_wave.wave_out
wave_out[11] <= enable_sine_wave:u_enable_sine_wave.wave_out
wave_out[12] <= enable_sine_wave:u_enable_sine_wave.wave_out
wave_out[13] <= enable_sine_wave:u_enable_sine_wave.wave_out
wave_out[14] <= enable_sine_wave:u_enable_sine_wave.wave_out
wave_out[15] <= enable_sine_wave:u_enable_sine_wave.wave_out


|Tone_Generator|DAC16:dac|raw_sine_wave:sine_wave|enable_sine_wave:u_enable_sine_wave
clk => clk.IN1
reset => reset.IN1
enb => enb_gated.IN0
Enable => enb_gated.IN1
Enable => Add_out1_bypass.OUTPUTSELECT
Enable => Add_out1_bypass.OUTPUTSELECT
Enable => Add_out1_bypass.OUTPUTSELECT
Enable => Add_out1_bypass.OUTPUTSELECT
Enable => Add_out1_bypass.OUTPUTSELECT
Enable => Add_out1_bypass.OUTPUTSELECT
Enable => Add_out1_bypass.OUTPUTSELECT
Enable => Add_out1_bypass.OUTPUTSELECT
Enable => Add_out1_bypass.OUTPUTSELECT
Enable => Add_out1_bypass.OUTPUTSELECT
Enable => Add_out1_bypass.OUTPUTSELECT
Enable => Add_out1_bypass.OUTPUTSELECT
Enable => Add_out1_bypass.OUTPUTSELECT
Enable => Add_out1_bypass.OUTPUTSELECT
Enable => Add_out1_bypass.OUTPUTSELECT
Enable => Add_out1_bypass.OUTPUTSELECT
wave_out[0] <= Add_out1_bypass.DB_MAX_OUTPUT_PORT_TYPE
wave_out[1] <= Add_out1_bypass.DB_MAX_OUTPUT_PORT_TYPE
wave_out[2] <= Add_out1_bypass.DB_MAX_OUTPUT_PORT_TYPE
wave_out[3] <= Add_out1_bypass.DB_MAX_OUTPUT_PORT_TYPE
wave_out[4] <= Add_out1_bypass.DB_MAX_OUTPUT_PORT_TYPE
wave_out[5] <= Add_out1_bypass.DB_MAX_OUTPUT_PORT_TYPE
wave_out[6] <= Add_out1_bypass.DB_MAX_OUTPUT_PORT_TYPE
wave_out[7] <= Add_out1_bypass.DB_MAX_OUTPUT_PORT_TYPE
wave_out[8] <= Add_out1_bypass.DB_MAX_OUTPUT_PORT_TYPE
wave_out[9] <= Add_out1_bypass.DB_MAX_OUTPUT_PORT_TYPE
wave_out[10] <= Add_out1_bypass.DB_MAX_OUTPUT_PORT_TYPE
wave_out[11] <= Add_out1_bypass.DB_MAX_OUTPUT_PORT_TYPE
wave_out[12] <= Add_out1_bypass.DB_MAX_OUTPUT_PORT_TYPE
wave_out[13] <= Add_out1_bypass.DB_MAX_OUTPUT_PORT_TYPE
wave_out[14] <= Add_out1_bypass.DB_MAX_OUTPUT_PORT_TYPE
wave_out[15] <= Add_out1_bypass.DB_MAX_OUTPUT_PORT_TYPE


|Tone_Generator|DAC16:dac|raw_sine_wave:sine_wave|enable_sine_wave:u_enable_sine_wave|Sine_Wave:u_Sine_Wave
clk => address_cnt1[0].CLK
clk => address_cnt1[1].CLK
clk => address_cnt1[2].CLK
clk => address_cnt1[3].CLK
clk => address_cnt1[4].CLK
clk => address_cnt1[5].CLK
clk => address_cnt1[6].CLK
reset => address_cnt1[0].ACLR
reset => address_cnt1[1].ACLR
reset => address_cnt1[2].ACLR
reset => address_cnt1[3].ACLR
reset => address_cnt1[4].ACLR
reset => address_cnt1[5].ACLR
reset => address_cnt1[6].ACLR
enb => address_cnt1[6].ENA
enb => address_cnt1[5].ENA
enb => address_cnt1[4].ENA
enb => address_cnt1[3].ENA
enb => address_cnt1[2].ENA
enb => address_cnt1[1].ENA
enb => address_cnt1[0].ENA
Sine_Wave_out1[0] <= Mux15.DB_MAX_OUTPUT_PORT_TYPE
Sine_Wave_out1[1] <= Mux14.DB_MAX_OUTPUT_PORT_TYPE
Sine_Wave_out1[2] <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
Sine_Wave_out1[3] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
Sine_Wave_out1[4] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
Sine_Wave_out1[5] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
Sine_Wave_out1[6] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
Sine_Wave_out1[7] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
Sine_Wave_out1[8] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
Sine_Wave_out1[9] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
Sine_Wave_out1[10] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
Sine_Wave_out1[11] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
Sine_Wave_out1[12] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
Sine_Wave_out1[13] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
Sine_Wave_out1[14] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
Sine_Wave_out1[15] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


