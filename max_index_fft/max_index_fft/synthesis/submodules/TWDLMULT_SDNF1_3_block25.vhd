-- -------------------------------------------------------------
-- 
-- File Name: D:\Salukat\Development\Software\Quartus\MAX_10\FFT\max_10_frequency_index\TWDLMULT_SDNF1_3_block25.vhd
-- Created: 2021-01-31 17:42:17
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: TWDLMULT_SDNF1_3_block25
-- Source Path: max_10_frequency_index/max_10_index_frequency/FFT_streamer/FFT HDL Optimized/TWDLMULT_SDNF1_3
-- Hierarchy Level: 3
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY TWDLMULT_SDNF1_3_block25 IS
  PORT( clk                               :   IN    std_logic;
        enb_1_64_0                        :   IN    std_logic;
        dout_42_re                        :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12
        dout_42_im                        :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12
        dout_44_re                        :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12
        dout_44_im                        :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12
        dout_2_vld                        :   IN    std_logic;
        twdl_3_53_re                      :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
        twdl_3_53_im                      :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
        twdl_3_54_re                      :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
        twdl_3_54_im                      :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
        twdl_3_54_vld                     :   IN    std_logic;
        softReset                         :   IN    std_logic;
        twdlXdin_53_re                    :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12
        twdlXdin_53_im                    :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12
        twdlXdin_54_re                    :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12
        twdlXdin_54_im                    :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12
        twdlXdin_53_vld                   :   OUT   std_logic
        );
END TWDLMULT_SDNF1_3_block25;


ARCHITECTURE rtl OF TWDLMULT_SDNF1_3_block25 IS

  -- Component Declarations
  COMPONENT Complex4Multiply_block47
    PORT( clk                             :   IN    std_logic;
          enb_1_64_0                      :   IN    std_logic;
          din1_re_dly3                    :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12
          din1_im_dly3                    :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12
          din1_vld_dly3                   :   IN    std_logic;
          twdl_3_53_re                    :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
          twdl_3_53_im                    :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
          softReset                       :   IN    std_logic;
          twdlXdin_53_re                  :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12
          twdlXdin_53_im                  :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12
          twdlXdin1_vld                   :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT Complex4Multiply_block48
    PORT( clk                             :   IN    std_logic;
          enb_1_64_0                      :   IN    std_logic;
          din2_re_dly3                    :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12
          din2_im_dly3                    :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12
          di2_vld_dly3                    :   IN    std_logic;
          twdl_3_54_re                    :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
          twdl_3_54_im                    :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12_En10
          softReset                       :   IN    std_logic;
          twdlXdin_54_re                  :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12
          twdlXdin_54_im                  :   OUT   std_logic_vector(11 DOWNTO 0);  -- sfix12
          twdlXdin2_vld                   :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Complex4Multiply_block47
    USE ENTITY work.Complex4Multiply_block47(rtl);

  FOR ALL : Complex4Multiply_block48
    USE ENTITY work.Complex4Multiply_block48(rtl);

  -- Signals
  SIGNAL dout_42_re_signed                : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL din1_re_dly1                     : signed(11 DOWNTO 0) := to_signed(16#000#, 12);  -- sfix12
  SIGNAL din1_re_dly2                     : signed(11 DOWNTO 0) := to_signed(16#000#, 12);  -- sfix12
  SIGNAL dout_42_im_signed                : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL din1_im_dly1                     : signed(11 DOWNTO 0) := to_signed(16#000#, 12);  -- sfix12
  SIGNAL din1_im_dly2                     : signed(11 DOWNTO 0) := to_signed(16#000#, 12);  -- sfix12
  SIGNAL din1_re_dly3                     : signed(11 DOWNTO 0) := to_signed(16#000#, 12);  -- sfix12
  SIGNAL din1_im_dly3                     : signed(11 DOWNTO 0) := to_signed(16#000#, 12);  -- sfix12
  SIGNAL din1_vld_dly1                    : std_logic := '0';
  SIGNAL din1_vld_dly2                    : std_logic := '0';
  SIGNAL din1_vld_dly3                    : std_logic := '0';
  SIGNAL twdlXdin_53_re_tmp               : std_logic_vector(11 DOWNTO 0);  -- ufix12
  SIGNAL twdlXdin_53_im_tmp               : std_logic_vector(11 DOWNTO 0);  -- ufix12
  SIGNAL twdlXdin1_vld                    : std_logic;
  SIGNAL dout_44_re_signed                : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL din2_re_dly1                     : signed(11 DOWNTO 0) := to_signed(16#000#, 12);  -- sfix12
  SIGNAL din2_re_dly2                     : signed(11 DOWNTO 0) := to_signed(16#000#, 12);  -- sfix12
  SIGNAL dout_44_im_signed                : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL din2_im_dly1                     : signed(11 DOWNTO 0) := to_signed(16#000#, 12);  -- sfix12
  SIGNAL din2_im_dly2                     : signed(11 DOWNTO 0) := to_signed(16#000#, 12);  -- sfix12
  SIGNAL din2_re_dly3                     : signed(11 DOWNTO 0) := to_signed(16#000#, 12);  -- sfix12
  SIGNAL din2_im_dly3                     : signed(11 DOWNTO 0) := to_signed(16#000#, 12);  -- sfix12
  SIGNAL di2_vld_dly1                     : std_logic := '0';
  SIGNAL di2_vld_dly2                     : std_logic := '0';
  SIGNAL di2_vld_dly3                     : std_logic := '0';
  SIGNAL twdlXdin_54_re_tmp               : std_logic_vector(11 DOWNTO 0);  -- ufix12
  SIGNAL twdlXdin_54_im_tmp               : std_logic_vector(11 DOWNTO 0);  -- ufix12

BEGIN
  u_MUL4_1 : Complex4Multiply_block47
    PORT MAP( clk => clk,
              enb_1_64_0 => enb_1_64_0,
              din1_re_dly3 => std_logic_vector(din1_re_dly3),  -- sfix12
              din1_im_dly3 => std_logic_vector(din1_im_dly3),  -- sfix12
              din1_vld_dly3 => din1_vld_dly3,
              twdl_3_53_re => twdl_3_53_re,  -- sfix12_En10
              twdl_3_53_im => twdl_3_53_im,  -- sfix12_En10
              softReset => softReset,
              twdlXdin_53_re => twdlXdin_53_re_tmp,  -- sfix12
              twdlXdin_53_im => twdlXdin_53_im_tmp,  -- sfix12
              twdlXdin1_vld => twdlXdin1_vld
              );

  u_MUL4_2 : Complex4Multiply_block48
    PORT MAP( clk => clk,
              enb_1_64_0 => enb_1_64_0,
              din2_re_dly3 => std_logic_vector(din2_re_dly3),  -- sfix12
              din2_im_dly3 => std_logic_vector(din2_im_dly3),  -- sfix12
              di2_vld_dly3 => di2_vld_dly3,
              twdl_3_54_re => twdl_3_54_re,  -- sfix12_En10
              twdl_3_54_im => twdl_3_54_im,  -- sfix12_En10
              softReset => softReset,
              twdlXdin_54_re => twdlXdin_54_re_tmp,  -- sfix12
              twdlXdin_54_im => twdlXdin_54_im_tmp,  -- sfix12
              twdlXdin2_vld => twdlXdin_53_vld
              );

  dout_42_re_signed <= signed(dout_42_re);

  intdelay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb_1_64_0 = '1' THEN
        din1_re_dly1 <= dout_42_re_signed;
      END IF;
    END IF;
  END PROCESS intdelay_process;


  intdelay_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb_1_64_0 = '1' THEN
        din1_re_dly2 <= din1_re_dly1;
      END IF;
    END IF;
  END PROCESS intdelay_1_process;


  dout_42_im_signed <= signed(dout_42_im);

  intdelay_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb_1_64_0 = '1' THEN
        din1_im_dly1 <= dout_42_im_signed;
      END IF;
    END IF;
  END PROCESS intdelay_2_process;


  intdelay_3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb_1_64_0 = '1' THEN
        din1_im_dly2 <= din1_im_dly1;
      END IF;
    END IF;
  END PROCESS intdelay_3_process;


  intdelay_4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb_1_64_0 = '1' THEN
        din1_re_dly3 <= din1_re_dly2;
      END IF;
    END IF;
  END PROCESS intdelay_4_process;


  intdelay_5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb_1_64_0 = '1' THEN
        din1_im_dly3 <= din1_im_dly2;
      END IF;
    END IF;
  END PROCESS intdelay_5_process;


  intdelay_6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb_1_64_0 = '1' THEN
        din1_vld_dly1 <= dout_2_vld;
      END IF;
    END IF;
  END PROCESS intdelay_6_process;


  intdelay_7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb_1_64_0 = '1' THEN
        din1_vld_dly2 <= din1_vld_dly1;
      END IF;
    END IF;
  END PROCESS intdelay_7_process;


  intdelay_8_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb_1_64_0 = '1' THEN
        din1_vld_dly3 <= din1_vld_dly2;
      END IF;
    END IF;
  END PROCESS intdelay_8_process;


  dout_44_re_signed <= signed(dout_44_re);

  intdelay_9_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb_1_64_0 = '1' THEN
        din2_re_dly1 <= dout_44_re_signed;
      END IF;
    END IF;
  END PROCESS intdelay_9_process;


  intdelay_10_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb_1_64_0 = '1' THEN
        din2_re_dly2 <= din2_re_dly1;
      END IF;
    END IF;
  END PROCESS intdelay_10_process;


  dout_44_im_signed <= signed(dout_44_im);

  intdelay_11_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb_1_64_0 = '1' THEN
        din2_im_dly1 <= dout_44_im_signed;
      END IF;
    END IF;
  END PROCESS intdelay_11_process;


  intdelay_12_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb_1_64_0 = '1' THEN
        din2_im_dly2 <= din2_im_dly1;
      END IF;
    END IF;
  END PROCESS intdelay_12_process;


  intdelay_13_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb_1_64_0 = '1' THEN
        din2_re_dly3 <= din2_re_dly2;
      END IF;
    END IF;
  END PROCESS intdelay_13_process;


  intdelay_14_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb_1_64_0 = '1' THEN
        din2_im_dly3 <= din2_im_dly2;
      END IF;
    END IF;
  END PROCESS intdelay_14_process;


  intdelay_15_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb_1_64_0 = '1' THEN
        di2_vld_dly1 <= dout_2_vld;
      END IF;
    END IF;
  END PROCESS intdelay_15_process;


  intdelay_16_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb_1_64_0 = '1' THEN
        di2_vld_dly2 <= di2_vld_dly1;
      END IF;
    END IF;
  END PROCESS intdelay_16_process;


  intdelay_17_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb_1_64_0 = '1' THEN
        di2_vld_dly3 <= di2_vld_dly2;
      END IF;
    END IF;
  END PROCESS intdelay_17_process;


  twdlXdin_53_re <= twdlXdin_53_re_tmp;

  twdlXdin_53_im <= twdlXdin_53_im_tmp;

  twdlXdin_54_re <= twdlXdin_54_re_tmp;

  twdlXdin_54_im <= twdlXdin_54_im_tmp;

END rtl;

