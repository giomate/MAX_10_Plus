-- -------------------------------------------------------------
-- 
-- File Name: D:\Salukat\Development\Software\Quartus\MAX_10\FFT\max_10_frequency_index\max_10_index_frequency.vhd
-- Created: 2021-01-31 19:41:15
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1e-06
-- Target subsystem base rate: 1e-06
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        3.2e-05
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- index_max                     ce_out        3.2e-05
-- valid_out                     ce_out        3.2e-05
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: max_10_index_frequency
-- Source Path: max_10_frequency_index/max_10_index_frequency
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.max_10_index_frequency_pkg.ALL;

ENTITY max_10_index_frequency IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        rx_in                             :   IN    std_logic_vector(11 DOWNTO 0);  -- ufix12
        ce_out                            :   OUT   std_logic;
        index_max                         :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
        valid_out                         :   OUT   std_logic
        );
END max_10_index_frequency;


ARCHITECTURE rtl OF max_10_index_frequency IS

  -- Component Declarations
  COMPONENT max_10_index_frequency_tc
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          enb                             :   OUT   std_logic;
          enb_1_32_0                      :   OUT   std_logic;
          enb_1_32_1                      :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT DC_Blocker_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          In1                             :   IN    std_logic_vector(11 DOWNTO 0);  -- ufix12
          wave_out                        :   OUT   std_logic_vector(11 DOWNTO 0)  -- sfix12
          );
  END COMPONENT;

  COMPONENT serial2parallel
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          S                               :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12
          P                               :   OUT   vector_of_std_logic_vector12(0 TO 31);  -- sfix12 [32]
          ValidOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT FFT_streamer
    PORT( clk                             :   IN    std_logic;
          enb_1_32_0                      :   IN    std_logic;
          In1                             :   IN    vector_of_std_logic_vector12(0 TO 31);  -- sfix12 [32]
          In2                             :   IN    std_logic;
          Out1_re                         :   OUT   vector_of_std_logic_vector12(0 TO 31);  -- sfix12 [32]
          Out1_im                         :   OUT   vector_of_std_logic_vector12(0 TO 31);  -- sfix12 [32]
          Out2                            :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT frequency_max
    PORT( clk                             :   IN    std_logic;
          enb_1_32_0                      :   IN    std_logic;
          fft_data_re                     :   IN    vector_of_std_logic_vector12(0 TO 31);  -- sfix12 [32]
          fft_data_im                     :   IN    vector_of_std_logic_vector12(0 TO 31);  -- sfix12 [32]
          enable                          :   IN    std_logic;
          index_max                       :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
          valid_out                       :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : max_10_index_frequency_tc
    USE ENTITY work.max_10_index_frequency_tc(rtl);

  FOR ALL : DC_Blocker_block
    USE ENTITY work.DC_Blocker_block(rtl);

  FOR ALL : serial2parallel
    USE ENTITY work.serial2parallel(rtl);

  FOR ALL : FFT_streamer
    USE ENTITY work.FFT_streamer(rtl);

  FOR ALL : frequency_max
    USE ENTITY work.frequency_max(rtl);

  -- Signals
  SIGNAL enb_1_32_0                       : std_logic;
  SIGNAL enb                              : std_logic;
  SIGNAL enb_1_32_1                       : std_logic;
  SIGNAL DC_Blocker_out1                  : std_logic_vector(11 DOWNTO 0);  -- ufix12
  SIGNAL serial2parallel_out1             : vector_of_std_logic_vector12(0 TO 31);  -- ufix12 [32]
  SIGNAL serial2parallel_out2             : std_logic;
  SIGNAL FFT_streamer_out1_re             : vector_of_std_logic_vector12(0 TO 31);  -- ufix12 [32]
  SIGNAL FFT_streamer_out1_im             : vector_of_std_logic_vector12(0 TO 31);  -- ufix12 [32]
  SIGNAL FFT_streamer_out2                : std_logic;
  SIGNAL frequency_max_out1               : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL frequency_max_out2               : std_logic;

BEGIN
  u_max_10_index_frequency_tc : max_10_index_frequency_tc
    PORT MAP( clk => clk,
              reset => reset,
              clk_enable => clk_enable,
              enb => enb,
              enb_1_32_0 => enb_1_32_0,
              enb_1_32_1 => enb_1_32_1
              );

  u_DC_Blocker : DC_Blocker_block
    PORT MAP( clk => clk,
              enb => enb,
              In1 => rx_in,  -- ufix12
              wave_out => DC_Blocker_out1  -- sfix12
              );

  u_serial2parallel : serial2parallel
    PORT MAP( clk => clk,
              enb => enb,
              S => DC_Blocker_out1,  -- sfix12
              P => serial2parallel_out1,  -- sfix12 [32]
              ValidOut => serial2parallel_out2
              );

  u_FFT_streamer : FFT_streamer
    PORT MAP( clk => clk,
              enb_1_32_0 => enb_1_32_0,
              In1 => serial2parallel_out1,  -- sfix12 [32]
              In2 => serial2parallel_out2,
              Out1_re => FFT_streamer_out1_re,  -- sfix12 [32]
              Out1_im => FFT_streamer_out1_im,  -- sfix12 [32]
              Out2 => FFT_streamer_out2
              );

  u_frequency_max : frequency_max
    PORT MAP( clk => clk,
              enb_1_32_0 => enb_1_32_0,
              fft_data_re => FFT_streamer_out1_re,  -- sfix12 [32]
              fft_data_im => FFT_streamer_out1_im,  -- sfix12 [32]
              enable => FFT_streamer_out2,
              index_max => frequency_max_out1,  -- uint8
              valid_out => frequency_max_out2
              );

  valid_out <= frequency_max_out2;

  ce_out <= enb_1_32_1;

  index_max <= frequency_max_out1;

END rtl;

