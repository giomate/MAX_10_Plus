-- -------------------------------------------------------------
-- 
-- File Name: D:\Salukat\Development\Software\Quartus\MAX_10\FFT\max_10_frequency_index\serial2parallel.vhd
-- Created: 2021-01-31 19:41:15
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: serial2parallel
-- Source Path: max_10_frequency_index/max_10_index_frequency/serial2parallel
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.max_10_index_frequency_pkg.ALL;

ENTITY serial2parallel IS
  PORT( clk                               :   IN    std_logic;
        enb                               :   IN    std_logic;
        S                                 :   IN    std_logic_vector(11 DOWNTO 0);  -- sfix12
        P                                 :   OUT   vector_of_std_logic_vector12(0 TO 31);  -- sfix12 [32]
        ValidOut                          :   OUT   std_logic
        );
END serial2parallel;


ARCHITECTURE rtl OF serial2parallel IS

  -- Functions
  -- HDLCODER_TO_STDLOGIC 
  FUNCTION hdlcoder_to_stdlogic(arg: boolean) RETURN std_logic IS
  BEGIN
    IF arg THEN
      RETURN '1';
    ELSE
      RETURN '0';
    END IF;
  END FUNCTION;


  -- Signals
  SIGNAL Deserializer_contl_cnt           : unsigned(5 DOWNTO 0) := to_unsigned(16#00#, 6);  -- ufix6
  SIGNAL Deserializer_contl_validOutput   : std_logic;
  SIGNAL Deserializer_innerRegEn          : std_logic;
  SIGNAL Deserializer_innerRegCtrolEn     : std_logic;
  SIGNAL Deserializer_outBypassEn         : std_logic;
  SIGNAL Deserializer_tapDelayEn          : std_logic;
  SIGNAL Deserializer_hOutSignalsContl    : std_logic;
  SIGNAL Deserializer_tapDelayEn_1        : std_logic;
  SIGNAL S_signed                         : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL Deserializer_tapDelayComp_reg    : vector_of_signed12(0 TO 30) := (to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12));  -- sfix12 [31]
  SIGNAL Deserializer_tapDelayComp_reg_next : vector_of_signed12(0 TO 30);  -- sfix12 [31]
  SIGNAL Deserializer_tapout              : vector_of_signed12(0 TO 30);  -- sfix12 [31]
  SIGNAL Deserializer_muxOut              : vector_of_signed12(0 TO 31);  -- sfix12 [32]
  SIGNAL Deserializer_out1                : vector_of_signed12(0 TO 31) := (to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12), to_signed(16#000#, 12));  -- sfix12 [32]
  SIGNAL Deserializer_out2                : std_logic := '0';

BEGIN
  Deserializer_contl_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF Deserializer_contl_cnt = to_unsigned(16#1F#, 6) THEN 
          Deserializer_contl_cnt <= to_unsigned(16#00#, 6);
        ELSE 
          Deserializer_contl_cnt <= Deserializer_contl_cnt + to_unsigned(16#01#, 6);
        END IF;
      END IF;
    END IF;
  END PROCESS Deserializer_contl_process;

  Deserializer_tapDelayEn <= hdlcoder_to_stdlogic(Deserializer_contl_cnt < to_unsigned(16#1F#, 6));
  
  Deserializer_contl_validOutput <= '1' WHEN Deserializer_contl_cnt = to_unsigned(16#1F#, 6) ELSE
      '0';
  
  Deserializer_hOutSignalsContl <= '1' WHEN Deserializer_contl_validOutput = '1' ELSE
      '0';
  
  Deserializer_innerRegEn <= '1' WHEN Deserializer_contl_validOutput = '1' ELSE
      '0';
  
  Deserializer_innerRegCtrolEn <= '1' WHEN Deserializer_contl_validOutput = '1' ELSE
      '0';
  Deserializer_outBypassEn <= '1';

  Deserializer_tapDelayEn_1 <= enb AND Deserializer_tapDelayEn;

  S_signed <= signed(S);

  Deserializer_tapDelayComp_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND Deserializer_tapDelayEn_1 = '1' THEN
        Deserializer_tapDelayComp_reg(0) <= Deserializer_tapDelayComp_reg_next(0);
        Deserializer_tapDelayComp_reg(1) <= Deserializer_tapDelayComp_reg_next(1);
        Deserializer_tapDelayComp_reg(2) <= Deserializer_tapDelayComp_reg_next(2);
        Deserializer_tapDelayComp_reg(3) <= Deserializer_tapDelayComp_reg_next(3);
        Deserializer_tapDelayComp_reg(4) <= Deserializer_tapDelayComp_reg_next(4);
        Deserializer_tapDelayComp_reg(5) <= Deserializer_tapDelayComp_reg_next(5);
        Deserializer_tapDelayComp_reg(6) <= Deserializer_tapDelayComp_reg_next(6);
        Deserializer_tapDelayComp_reg(7) <= Deserializer_tapDelayComp_reg_next(7);
        Deserializer_tapDelayComp_reg(8) <= Deserializer_tapDelayComp_reg_next(8);
        Deserializer_tapDelayComp_reg(9) <= Deserializer_tapDelayComp_reg_next(9);
        Deserializer_tapDelayComp_reg(10) <= Deserializer_tapDelayComp_reg_next(10);
        Deserializer_tapDelayComp_reg(11) <= Deserializer_tapDelayComp_reg_next(11);
        Deserializer_tapDelayComp_reg(12) <= Deserializer_tapDelayComp_reg_next(12);
        Deserializer_tapDelayComp_reg(13) <= Deserializer_tapDelayComp_reg_next(13);
        Deserializer_tapDelayComp_reg(14) <= Deserializer_tapDelayComp_reg_next(14);
        Deserializer_tapDelayComp_reg(15) <= Deserializer_tapDelayComp_reg_next(15);
        Deserializer_tapDelayComp_reg(16) <= Deserializer_tapDelayComp_reg_next(16);
        Deserializer_tapDelayComp_reg(17) <= Deserializer_tapDelayComp_reg_next(17);
        Deserializer_tapDelayComp_reg(18) <= Deserializer_tapDelayComp_reg_next(18);
        Deserializer_tapDelayComp_reg(19) <= Deserializer_tapDelayComp_reg_next(19);
        Deserializer_tapDelayComp_reg(20) <= Deserializer_tapDelayComp_reg_next(20);
        Deserializer_tapDelayComp_reg(21) <= Deserializer_tapDelayComp_reg_next(21);
        Deserializer_tapDelayComp_reg(22) <= Deserializer_tapDelayComp_reg_next(22);
        Deserializer_tapDelayComp_reg(23) <= Deserializer_tapDelayComp_reg_next(23);
        Deserializer_tapDelayComp_reg(24) <= Deserializer_tapDelayComp_reg_next(24);
        Deserializer_tapDelayComp_reg(25) <= Deserializer_tapDelayComp_reg_next(25);
        Deserializer_tapDelayComp_reg(26) <= Deserializer_tapDelayComp_reg_next(26);
        Deserializer_tapDelayComp_reg(27) <= Deserializer_tapDelayComp_reg_next(27);
        Deserializer_tapDelayComp_reg(28) <= Deserializer_tapDelayComp_reg_next(28);
        Deserializer_tapDelayComp_reg(29) <= Deserializer_tapDelayComp_reg_next(29);
        Deserializer_tapDelayComp_reg(30) <= Deserializer_tapDelayComp_reg_next(30);
      END IF;
    END IF;
  END PROCESS Deserializer_tapDelayComp_process;

  Deserializer_tapout(0) <= Deserializer_tapDelayComp_reg(0);
  Deserializer_tapout(1) <= Deserializer_tapDelayComp_reg(1);
  Deserializer_tapout(2) <= Deserializer_tapDelayComp_reg(2);
  Deserializer_tapout(3) <= Deserializer_tapDelayComp_reg(3);
  Deserializer_tapout(4) <= Deserializer_tapDelayComp_reg(4);
  Deserializer_tapout(5) <= Deserializer_tapDelayComp_reg(5);
  Deserializer_tapout(6) <= Deserializer_tapDelayComp_reg(6);
  Deserializer_tapout(7) <= Deserializer_tapDelayComp_reg(7);
  Deserializer_tapout(8) <= Deserializer_tapDelayComp_reg(8);
  Deserializer_tapout(9) <= Deserializer_tapDelayComp_reg(9);
  Deserializer_tapout(10) <= Deserializer_tapDelayComp_reg(10);
  Deserializer_tapout(11) <= Deserializer_tapDelayComp_reg(11);
  Deserializer_tapout(12) <= Deserializer_tapDelayComp_reg(12);
  Deserializer_tapout(13) <= Deserializer_tapDelayComp_reg(13);
  Deserializer_tapout(14) <= Deserializer_tapDelayComp_reg(14);
  Deserializer_tapout(15) <= Deserializer_tapDelayComp_reg(15);
  Deserializer_tapout(16) <= Deserializer_tapDelayComp_reg(16);
  Deserializer_tapout(17) <= Deserializer_tapDelayComp_reg(17);
  Deserializer_tapout(18) <= Deserializer_tapDelayComp_reg(18);
  Deserializer_tapout(19) <= Deserializer_tapDelayComp_reg(19);
  Deserializer_tapout(20) <= Deserializer_tapDelayComp_reg(20);
  Deserializer_tapout(21) <= Deserializer_tapDelayComp_reg(21);
  Deserializer_tapout(22) <= Deserializer_tapDelayComp_reg(22);
  Deserializer_tapout(23) <= Deserializer_tapDelayComp_reg(23);
  Deserializer_tapout(24) <= Deserializer_tapDelayComp_reg(24);
  Deserializer_tapout(25) <= Deserializer_tapDelayComp_reg(25);
  Deserializer_tapout(26) <= Deserializer_tapDelayComp_reg(26);
  Deserializer_tapout(27) <= Deserializer_tapDelayComp_reg(27);
  Deserializer_tapout(28) <= Deserializer_tapDelayComp_reg(28);
  Deserializer_tapout(29) <= Deserializer_tapDelayComp_reg(29);
  Deserializer_tapout(30) <= Deserializer_tapDelayComp_reg(30);
  Deserializer_tapDelayComp_reg_next(0) <= Deserializer_tapDelayComp_reg(1);
  Deserializer_tapDelayComp_reg_next(1) <= Deserializer_tapDelayComp_reg(2);
  Deserializer_tapDelayComp_reg_next(2) <= Deserializer_tapDelayComp_reg(3);
  Deserializer_tapDelayComp_reg_next(3) <= Deserializer_tapDelayComp_reg(4);
  Deserializer_tapDelayComp_reg_next(4) <= Deserializer_tapDelayComp_reg(5);
  Deserializer_tapDelayComp_reg_next(5) <= Deserializer_tapDelayComp_reg(6);
  Deserializer_tapDelayComp_reg_next(6) <= Deserializer_tapDelayComp_reg(7);
  Deserializer_tapDelayComp_reg_next(7) <= Deserializer_tapDelayComp_reg(8);
  Deserializer_tapDelayComp_reg_next(8) <= Deserializer_tapDelayComp_reg(9);
  Deserializer_tapDelayComp_reg_next(9) <= Deserializer_tapDelayComp_reg(10);
  Deserializer_tapDelayComp_reg_next(10) <= Deserializer_tapDelayComp_reg(11);
  Deserializer_tapDelayComp_reg_next(11) <= Deserializer_tapDelayComp_reg(12);
  Deserializer_tapDelayComp_reg_next(12) <= Deserializer_tapDelayComp_reg(13);
  Deserializer_tapDelayComp_reg_next(13) <= Deserializer_tapDelayComp_reg(14);
  Deserializer_tapDelayComp_reg_next(14) <= Deserializer_tapDelayComp_reg(15);
  Deserializer_tapDelayComp_reg_next(15) <= Deserializer_tapDelayComp_reg(16);
  Deserializer_tapDelayComp_reg_next(16) <= Deserializer_tapDelayComp_reg(17);
  Deserializer_tapDelayComp_reg_next(17) <= Deserializer_tapDelayComp_reg(18);
  Deserializer_tapDelayComp_reg_next(18) <= Deserializer_tapDelayComp_reg(19);
  Deserializer_tapDelayComp_reg_next(19) <= Deserializer_tapDelayComp_reg(20);
  Deserializer_tapDelayComp_reg_next(20) <= Deserializer_tapDelayComp_reg(21);
  Deserializer_tapDelayComp_reg_next(21) <= Deserializer_tapDelayComp_reg(22);
  Deserializer_tapDelayComp_reg_next(22) <= Deserializer_tapDelayComp_reg(23);
  Deserializer_tapDelayComp_reg_next(23) <= Deserializer_tapDelayComp_reg(24);
  Deserializer_tapDelayComp_reg_next(24) <= Deserializer_tapDelayComp_reg(25);
  Deserializer_tapDelayComp_reg_next(25) <= Deserializer_tapDelayComp_reg(26);
  Deserializer_tapDelayComp_reg_next(26) <= Deserializer_tapDelayComp_reg(27);
  Deserializer_tapDelayComp_reg_next(27) <= Deserializer_tapDelayComp_reg(28);
  Deserializer_tapDelayComp_reg_next(28) <= Deserializer_tapDelayComp_reg(29);
  Deserializer_tapDelayComp_reg_next(29) <= Deserializer_tapDelayComp_reg(30);
  Deserializer_tapDelayComp_reg_next(30) <= S_signed;

  Deserializer_muxOut(0) <= Deserializer_tapout(0);
  Deserializer_muxOut(1) <= Deserializer_tapout(1);
  Deserializer_muxOut(2) <= Deserializer_tapout(2);
  Deserializer_muxOut(3) <= Deserializer_tapout(3);
  Deserializer_muxOut(4) <= Deserializer_tapout(4);
  Deserializer_muxOut(5) <= Deserializer_tapout(5);
  Deserializer_muxOut(6) <= Deserializer_tapout(6);
  Deserializer_muxOut(7) <= Deserializer_tapout(7);
  Deserializer_muxOut(8) <= Deserializer_tapout(8);
  Deserializer_muxOut(9) <= Deserializer_tapout(9);
  Deserializer_muxOut(10) <= Deserializer_tapout(10);
  Deserializer_muxOut(11) <= Deserializer_tapout(11);
  Deserializer_muxOut(12) <= Deserializer_tapout(12);
  Deserializer_muxOut(13) <= Deserializer_tapout(13);
  Deserializer_muxOut(14) <= Deserializer_tapout(14);
  Deserializer_muxOut(15) <= Deserializer_tapout(15);
  Deserializer_muxOut(16) <= Deserializer_tapout(16);
  Deserializer_muxOut(17) <= Deserializer_tapout(17);
  Deserializer_muxOut(18) <= Deserializer_tapout(18);
  Deserializer_muxOut(19) <= Deserializer_tapout(19);
  Deserializer_muxOut(20) <= Deserializer_tapout(20);
  Deserializer_muxOut(21) <= Deserializer_tapout(21);
  Deserializer_muxOut(22) <= Deserializer_tapout(22);
  Deserializer_muxOut(23) <= Deserializer_tapout(23);
  Deserializer_muxOut(24) <= Deserializer_tapout(24);
  Deserializer_muxOut(25) <= Deserializer_tapout(25);
  Deserializer_muxOut(26) <= Deserializer_tapout(26);
  Deserializer_muxOut(27) <= Deserializer_tapout(27);
  Deserializer_muxOut(28) <= Deserializer_tapout(28);
  Deserializer_muxOut(29) <= Deserializer_tapout(29);
  Deserializer_muxOut(30) <= Deserializer_tapout(30);
  Deserializer_muxOut(31) <= signed(S);

  Deserializer_regComp_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND Deserializer_innerRegEn = '1' THEN
        Deserializer_out1(0) <= Deserializer_muxOut(0);
        Deserializer_out1(1) <= Deserializer_muxOut(1);
        Deserializer_out1(2) <= Deserializer_muxOut(2);
        Deserializer_out1(3) <= Deserializer_muxOut(3);
        Deserializer_out1(4) <= Deserializer_muxOut(4);
        Deserializer_out1(5) <= Deserializer_muxOut(5);
        Deserializer_out1(6) <= Deserializer_muxOut(6);
        Deserializer_out1(7) <= Deserializer_muxOut(7);
        Deserializer_out1(8) <= Deserializer_muxOut(8);
        Deserializer_out1(9) <= Deserializer_muxOut(9);
        Deserializer_out1(10) <= Deserializer_muxOut(10);
        Deserializer_out1(11) <= Deserializer_muxOut(11);
        Deserializer_out1(12) <= Deserializer_muxOut(12);
        Deserializer_out1(13) <= Deserializer_muxOut(13);
        Deserializer_out1(14) <= Deserializer_muxOut(14);
        Deserializer_out1(15) <= Deserializer_muxOut(15);
        Deserializer_out1(16) <= Deserializer_muxOut(16);
        Deserializer_out1(17) <= Deserializer_muxOut(17);
        Deserializer_out1(18) <= Deserializer_muxOut(18);
        Deserializer_out1(19) <= Deserializer_muxOut(19);
        Deserializer_out1(20) <= Deserializer_muxOut(20);
        Deserializer_out1(21) <= Deserializer_muxOut(21);
        Deserializer_out1(22) <= Deserializer_muxOut(22);
        Deserializer_out1(23) <= Deserializer_muxOut(23);
        Deserializer_out1(24) <= Deserializer_muxOut(24);
        Deserializer_out1(25) <= Deserializer_muxOut(25);
        Deserializer_out1(26) <= Deserializer_muxOut(26);
        Deserializer_out1(27) <= Deserializer_muxOut(27);
        Deserializer_out1(28) <= Deserializer_muxOut(28);
        Deserializer_out1(29) <= Deserializer_muxOut(29);
        Deserializer_out1(30) <= Deserializer_muxOut(30);
        Deserializer_out1(31) <= Deserializer_muxOut(31);
      END IF;
    END IF;
  END PROCESS Deserializer_regComp_process;


  outputgen: FOR k IN 0 TO 31 GENERATE
    P(k) <= std_logic_vector(Deserializer_out1(k));
  END GENERATE;

  Deserializer_regComp_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND Deserializer_innerRegCtrolEn = '1' THEN
        Deserializer_out2 <= Deserializer_hOutSignalsContl;
      END IF;
    END IF;
  END PROCESS Deserializer_regComp_1_process;


  ValidOut <= Deserializer_out2;

END rtl;

