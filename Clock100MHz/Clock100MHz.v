
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module Clock100MHz(

	//////////// CLOCK //////////
	input 		          		ADC_CLK_10,
	input 		          		MAX10_CLK1_50,
	input 		          		MAX10_CLK2_50,
	input 		          		MAX10_CLK3_50,

	//////////// KEY //////////
	input 		          		FPGA_RESET_n,
	input 		     [4:0]		KEY,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// LEDR //////////
	output		     [9:0]		LEDR,

	//////////// HEX //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,

	//////////// Audio //////////
	inout 		          		AUDIO_BCLK,
	output		          		AUDIO_DIN_MFP1,
	input 		          		AUDIO_DOUT_MFP2,
	inout 		          		AUDIO_GPIO_MFP5,
	output		          		AUDIO_MCLK,
	input 		          		AUDIO_MISO_MFP4,
	inout 		          		AUDIO_RESET_n,
	output		          		AUDIO_SCL_SS_n,
	output		          		AUDIO_SCLK_MFP3,
	inout 		          		AUDIO_SDA_MOSI,
	output		          		AUDIO_SPI_SELECT,
	inout 		          		AUDIO_WCLK,

	//////////// DAC //////////
	inout 		          		DAC_DATA,
	output		          		DAC_SCLK,
	output		          		DAC_SYNC_n,

	//////////// QSPI Flash //////////
	inout 		     [3:0]		FLASH_DATA,
	output		          		FLASH_DCLK,
	output		          		FLASH_NCSO,
	output		          		FLASH_RESET_n,

	//////////// Ethernet //////////
	output		          		NET_GTX_CLK,
	input 		          		NET_INT_n,
	input 		          		NET_LINK100,
	output		          		NET_MDC,
	inout 		          		NET_MDIO,
	output		          		NET_RST_N,
	input 		          		NET_RX_CLK,
	input 		          		NET_RX_COL,
	input 		          		NET_RX_CRS,
	input 		     [3:0]		NET_RX_D,
	input 		          		NET_RX_DV,
	input 		          		NET_RX_ER,
	input 		          		NET_TX_CLK,
	output		     [3:0]		NET_TX_D,
	output		          		NET_TX_EN,
	output		          		NET_TX_ER,

	//////////// Power Monitor //////////
	output		          		PM_I2C_SCL,
	inout 		          		PM_I2C_SDA,

	//////////// PS2 //////////
	inout 		          		PS2_CLK,
	inout 		          		PS2_CLK2,
	inout 		          		PS2_DAT,
	inout 		          		PS2_DAT2,

	//////////// Humidity and Temperature Sensor //////////
	input 		          		RH_TEMP_DRDY_n,
	output		          		RH_TEMP_I2C_SCL,
	inout 		          		RH_TEMP_I2C_SDA,

	//////////// Uart to USB //////////
	output		          		UART_RESET_n,
	input 		          		UART_RX,
	output		          		UART_TX,

	//////////// TMD 2x6 GPIO Header, TMD connect to TMD Default //////////
	inout 		     [7:0]		GPIOGPIO
);



//=======================================================
//  REG/WIRE declarations
//=======================================================
wire pll1_c0;

wire pll1_locked;
wire pll1_clk;
wire  [26:0] counter_value;
reg [1:0] led_value;
//=======================================================
//  Structural coding
//=======================================================
assign LEDR[0]=pll1_locked;
assign	GPIOGPIO[3]=pll1_clk;


pll100 pll1(

	.inclk0(MAX10_CLK1_50),
	.c0(pll1_clk),
	.locked(pll1_locked)
	
	);
	
counter c1(
.clock(pll1_clk),
.q(counter_value)
);

always@* begin
	if(counter_value==0) begin
		
		led_value[1]<=~LEDR[1];
		led_value[0]<=led_value[1];
	end
end
assign LEDR[1]=led_value[0];

endmodule
